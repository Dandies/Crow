{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/context.tsx", "../app/emotion.cache.ts", "../app/root.tsx", "../app/routes/_index.tsx", "../app/components/CollectionSpecificBox.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["// entry.server.tsx\nimport { renderToString } from \"react-dom/server\"\nimport { CacheProvider } from \"@emotion/react\"\nimport createEmotionServer from \"@emotion/server/create-instance\"\nimport { RemixServer } from \"@remix-run/react\"\nimport type { EntryContext } from \"@remix-run/node\" // Depends on the runtime you choose\n\nimport { ServerStyleContext } from \"./context\"\nimport createEmotionCache from \"./emotion.cache\"\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache()\n  const { extractCriticalToChunks } = createEmotionServer(cache)\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  )\n\n  const chunks = extractCriticalToChunks(html)\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  )\n\n  responseHeaders.set(\"Content-Type\", \"text/html\")\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "// context.tsx\nimport React, { createContext } from \"react\"\n\nexport interface ServerStyleContextData {\n  key: string\n  ids: Array<string>\n  css: string\n}\n\nexport const ServerStyleContext = createContext<ServerStyleContextData[] | null>(null)\n\nexport interface ClientStyleContextData {\n  reset: () => void\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(null)\n", "// createEmotionCache.ts\nimport createCache from \"@emotion/cache\"\n\nexport const defaultCache = createEmotionCache()\n\nexport default function createEmotionCache() {\n  return createCache({ key: \"cha\" })\n}\n", "// root.tsx\nimport React, { useContext, useEffect } from \"react\"\nimport { withEmotionCache } from \"@emotion/react\"\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from \"@remix-run/react\"\nimport { MetaFunction, LinksFunction } from \"@remix-run/node\" // Depends on the runtime you choose\n\nimport { ServerStyleContext, ClientStyleContext } from \"./context\"\n\nexport const meta: MetaFunction = () => [\n  {\n    charset: \"utf-8\",\n    title: \"New Remix App\",\n    viewport: \"width=device-width,initial-scale=1\",\n  },\n]\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n    { rel: \"preconnect\", href: \"https://fonts.gstatic.com\" },\n    {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\",\n    },\n  ]\n}\n\ninterface DocumentProps {\n  children: React.ReactNode\n}\n\nconst Document = withEmotionCache(({ children }: DocumentProps, emotionCache) => {\n  const serverStyleData = useContext(ServerStyleContext)\n  const clientStyleData = useContext(ClientStyleContext)\n\n  // Only executed on client\n  useEffect(() => {\n    // re-link sheet container\n    emotionCache.sheet.container = document.head\n    // re-inject tags\n    const tags = emotionCache.sheet.tags\n    emotionCache.sheet.flush()\n    tags.forEach((tag) => {\n      ;(emotionCache.sheet as any)._insertTag(tag)\n    })\n    // reset cache to reapply global styles\n    clientStyleData?.reset()\n  }, [])\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        {serverStyleData?.map(({ key, ids, css }) => (\n          <style key={key} data-emotion={`${key} ${ids.join(\" \")}`} dangerouslySetInnerHTML={{ __html: css }} />\n        ))}\n      </head>\n      <body>\n        <ChakraProvider>\n          <Outlet />\n        </ChakraProvider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n})\n", "import { CollectionSpecificBox } from \"~/components/CollectionSpecificBox\"\n\nexport default function Index() {\n  return <CollectionSpecificBox nft={{ tokenMint: \"8p6ADKeFFN37y1qcDp6jghdHAoxz5LVxWxbBhoEMYbF4\" }} />\n}\n", "import { useEffect, useState } from \"react\"\nimport { Badge } from \"@chakra-ui/react\"\nimport { Tooltip } from \"@chakra-ui/react\"\nimport axios from \"axios\"\n\nconst API_URI = \"https://k8crcirvm2.execute-api.us-east-1.amazonaws.com/mint\"\n\ntype Asset = {\n  publicKey: string\n  crow: string\n  authority: string\n  assetType: { token: {} } | { sol: {} } | { nft: {} }\n  tokenMint?: string\n  amount: string | null\n  balance: string\n  claimed: string\n  startTime: string\n  endTime: string | null\n  vesting: { none: {} } | { linear: {} } | { intervals: { numIntervals: number } }\n  feesWaived: boolean\n  active: boolean\n}\n\ntype Crow = {\n  publicKey: string\n  assets: Asset[]\n}\n\nexport const CollectionSpecificBox = ({ nft }: { nft: StatefulNft }) => {\n  // Store some state\n  const [crow, setCrow] = useState<Crow | undefined>(undefined)\n\n  useEffect(() => {\n    ;(async () => {\n      // Call some api\n      const r = await axios.get<{\n        crow: Crow\n      }>(`${API_URI}/${nft.tokenMint}`)\n      if (r.status !== 200) {\n        return\n      }\n\n      console.log(r.data)\n\n      setCrow(r.data.crow)\n    })()\n  }, [nft])\n\n  if (crow === undefined) return null\n\n  // Display it as badge + tooltip\n  return (\n    <Tooltip label={\"some custom text\"}>\n      <Badge variant={\"solid\"}>{crow.assets.length}</Badge>\n    </Tooltip>\n  )\n}\n", "export default {'entry':{'module':'/build/entry.client-A4BHYSYF.js','imports':['/build/_shared/chunk-XJYTEBPW.js','/build/_shared/chunk-LMDFFWAH.js','/build/_shared/chunk-Z57QM6D6.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-PP77EWZX.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-XWTT5XPI.js','imports':['/build/_shared/chunk-DXHHX322.js','/build/_shared/chunk-NMZL6IDN.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-GXWLF4B2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'5ddb7505','hmr':{'runtime':'/build/_shared/chunk-PP77EWZX.js','timestamp':1709303420669},'url':'/build/manifest-5DDB7505.js'};", "\nimport * as entryServer from \"/Users/joefitter/Dev/solana/crow/tensor_widget/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "useEffect", "jsxDEV", "jsxDEV"]
}
