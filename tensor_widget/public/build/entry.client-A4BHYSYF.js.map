{
  "version": 3,
  "sources": ["../../app/entry.client.tsx", "../../app/emotion.cache.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/entry.client.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/entry.client.tsx\");\n  import.meta.hot.lastModified = \"1709302513300.6853\";\n}\n// REMIX HMR END\n\n// entry.client.tsx\nimport React, { useState } from \"react\";\nimport { hydrate } from \"react-dom\";\nimport { CacheProvider } from \"@emotion/react\";\nimport { RemixBrowser } from \"@remix-run/react\";\nimport { ClientStyleContext } from \"./context\";\nimport createEmotionCache, { defaultCache } from \"./emotion.cache\";\nfunction ClientCacheProvider({\n  children\n}) {\n  _s();\n  const [cache, setCache] = useState(defaultCache);\n  function reset() {\n    setCache(createEmotionCache());\n  }\n  return <ClientStyleContext.Provider value={{\n    reset\n  }}>\n      <CacheProvider value={cache}>{children}</CacheProvider>\n    </ClientStyleContext.Provider>;\n}\n_s(ClientCacheProvider, \"tcIOn6Sd77WzbBr/Pv1kFwXQ8Ls=\");\n_c = ClientCacheProvider;\nhydrate(<ClientCacheProvider>\n    <RemixBrowser />\n  </ClientCacheProvider>, document);\nvar _c;\n$RefreshReg$(_c, \"ClientCacheProvider\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/emotion.cache.ts\"\n);\nimport.meta.hot.lastModified = \"1709302489627.7764\";\n}\n// REMIX HMR END\n\n// createEmotionCache.ts\nimport createCache from \"@emotion/cache\"\n\nexport const defaultCache = createEmotionCache()\n\nexport default function createEmotionCache() {\n  return createCache({ key: \"cha\" })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,mBAAgC;AAChC,uBAAwB;;;ACrBxB,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAMO,IAAM,eAAe,mBAAmB;AAEhC,SAAR,qBAAsC;AAC3C,SAAO,YAAY,EAAE,KAAK,MAAM,CAAC;AACnC;;;ADqBM;AAtCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2BAA6B,EAAE;AAAA,EACxE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsB;AACtB,cAAY,IAAI,eAAe;AACjC;AAUA,SAAS,oBAAoB;AAAA,EAC3B;AACF,GAAG;AACD,KAAG;AACH,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAS,YAAY;AAC/C,WAAS,QAAQ;AACf,aAAS,mBAAmB,CAAC;AAAA,EAC/B;AACA,SAAO,mDAAC,mBAAmB,UAAnB,EAA4B,OAAO;AAAA,IACzC;AAAA,EACF,GACI,6DAAC,iBAAc,OAAO,OAAQ,YAA9B;AAAA;AAAA;AAAA;AAAA,SAAuC,KAHpC;AAAA;AAAA;AAAA;AAAA,SAIL;AACJ;AACA,GAAG,qBAAqB,8BAA8B;AACtD,KAAK;AAAA,IACL,0BAAQ,mDAAC,uBACL,6DAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,OAAc,KADV;AAAA;AAAA;AAAA;AAAA,OAEN,GAAwB,QAAQ;AAClC,IAAI;AACJ,aAAa,IAAI,qBAAqB;AAEtC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
